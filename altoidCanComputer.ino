// Include application, user and local libraries
#include "SPI.h"
#include "TFT_22_ILI9225.h"

#define TFT_RST 9
#define TFT_RS  10
#define TFT_CS  8
#define TFT_SDI 11
#define TFT_CLK 13
#define TFT_LED 0

#define TFT_BRIGHTNESS 200

#define BUTTON_UP 4
#define BUTTON_DOWN 5
#define BUTTON_RIGHT 6
#define BUTTON_LEFT 3
#define BUTTON_ENTER 2

TFT_22_ILI9225 tft = TFT_22_ILI9225(TFT_RST, TFT_RS, TFT_CS, TFT_LED, TFT_BRIGHTNESS);

const uint8_t ARROW_BACK[] PROGMEM = {
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x0F, 0xF0, 0xFF, 0xFF, 0x0F, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x84, 0x97, 0x01, 0x48, 0xCA, 0xD0, 0x00, 0x48, 0x51, 0x70, 0x00, 0x38, 0x5F, 0x30, 0x00, 0x48, 0x51, 0x70, 0x00, 0x48, 0xD1, 0xD0, 0x00, 0x38, 0x91, 0x97, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char "
};
const uint8_t ARROW_NEXT[] PROGMEM = {
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0xF0, 0xFF, 0xFF, 0x0F, 0xF0, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xBE, 0xE8, 0x03, 0x98, 0x82, 0x8D, 0x00, 0x98, 0x02, 0x87, 0x00, 0xA8, 0x1E, 0x82, 0x00, 0xC8, 0x02, 0x87, 0x00, 0xC8, 0x82, 0x8D, 0x00, 0x88, 0xBE, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char #
};

const uint8_t ARROW_CLEAR[] PROGMEM = {
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char )
};

void drawArrowBitmap(const uint8_t *ARROW, int color, int x, int y, bool isBold)
{
  tft.drawXBitmap(x, y, ARROW, 32, 32, color);
  if(isBold)
    tft.drawRectangle(x, y, x + 31, y + 31, color);
  else
    tft.drawRectangle(x, y, x + 31, y + 31, 0x0000);
}
void screenClear()
{
  tft.clear();
  tft.drawRectangle(0, 0, tft.maxX() - 1, tft.maxY() - 1, COLOR_WHITE);
  drawArrowBitmap(ARROW_BACK, 0xFFFF, 5, tft.maxY() - 38, false);
  drawArrowBitmap(ARROW_NEXT, 0xFFFF, tft.maxX() - 38, tft.maxY() - 38, false);
}

void text_presentation(int SCREEN_val)
{
  tft.setFont(Terminal6x8);
  tft.drawText(5,5,String(SCREEN_val), 0x07E0);
  
  if(SCREEN_val == 1)
  {
    tft.drawText(43, 5, "Hi! Welcome to the", 0xFFFF);
    tft.drawText(43, 14, "AltoidTinComputer", 0xFFE0);
    tft.drawText(43, 23, "(TM)! This was progr-", 0xFFFF);
    tft.drawText(43, 32, "amed by ", 0xFFFF);
    tft.drawText(92, 32, "Ruiqi Li", 0xFFE0);
  }
  else if(SCREEN_val == 2)
  {
    tft.drawText(43, 5, "Materials are bought", 0xFFFF);
    tft.drawText(43, 14, "from amazon/adafru-", 0xFFFF);
    tft.drawText(43, 23, "it. Materials are:", 0xFFFF);
    tft.drawRectangle(65, 35, 66, 36, 0xFFFF);
    
    tft.drawText(69, 32, "Arduino Nano", 0xFFFF);
    tft.drawRectangle(65, 35, 66, 36, 0x001F);
    
    tft.drawText(69, 41, "Li-Ion battery", 0xFFFF);
    tft.drawRectangle(65, 44, 66, 45, 0x001F);
    
    tft.drawText(69, 50, "Buttons (5)", 0xFFFF);
    tft.drawRectangle(65, 53, 66, 54, 0x001F);
    
    tft.drawText(69, 50, "Powerboost 500", 0xFFFF);
    tft.drawText(69, 59, "charger (Adafruit)", 0xFFFF);
    tft.drawRectangle(65, 53, 66, 54, 0x001F);

    tft.drawText(69, 68, "3.5\" TFT screen", 0xFFFF);
    tft.drawRectangle(65, 71, 66, 72, 0x001F);

    tft.drawText(69, 77, "A Altoid Tin.", 0xFFFF);
    tft.drawRectangle(65, 80, 66, 81, 0x001F);
  }
  else if(SCREEN_val == 3)
  {
    tft.drawText(43, 5, "Code for this is on", 0xFFFF);
    tft.drawText(43, 14, "GitHub. GitHub is a", 0xFFFF);
    tft.drawText(43, 23, "very useful version", 0xFFFF);
    tft.drawText(43, 32, "contorl site. It", 0xFFFF);
    tft.drawText(43, 41, "was very helpful", 0xFFFF);
    tft.drawText(43, 50, "when I needed prev-", 0xFFFF);
    tft.drawText(43, 59, "ious versions for ", 0xFFFF);
    tft.drawText(43, 68, "testing", 0xFFFF);
  }
}

int SCREEN_val = 0;

void setup() {
  tft.begin();
  Serial.begin(9600);

  pinMode(BUTTON_UP, INPUT_PULLUP);
  pinMode(BUTTON_DOWN, INPUT_PULLUP);
  pinMode(BUTTON_RIGHT, INPUT_PULLUP);
  pinMode(BUTTON_LEFT, INPUT_PULLUP);
  pinMode(BUTTON_ENTER, INPUT_PULLUP);
  
  tft.setOrientation(1);
  screenClear();
}

int button = -1;
void loop(){
  temmie:

  tft.setFont(Terminal6x8);
  
    if(!digitalRead(BUTTON_UP)) 
    {
      button = 0;
    }
    if(!digitalRead(BUTTON_DOWN))
    {
      button = 1;
    }
    if(!digitalRead(BUTTON_RIGHT)) 
    { 
      button = 2;
      drawArrowBitmap(ARROW_BACK, 0xFFFF, 5, tft.maxY() - 38, false);
      drawArrowBitmap(ARROW_NEXT, 0xFFFF, tft.maxX() - 38, tft.maxY() - 38, true);
    }
    if(!digitalRead(BUTTON_LEFT))
    {
      button = 3;
      drawArrowBitmap(ARROW_NEXT, 0xFFFF, tft.maxX() - 38, tft.maxY() - 38, false);
      drawArrowBitmap(ARROW_BACK, 0xFFFF, 5, tft.maxY() - 38, true);
    }
    if(!digitalRead(BUTTON_ENTER))
    {
      if(button == 0)
      {
      // do whatever
      }
      else if(button == 1)
      {
      // do whatever
      }
      else if(button == 2)
      {
        screenClear();
        SCREEN_val ++;
        button = -1;
        text_presentation(SCREEN_val);
      }
      else if(button == 3)
      {
        screenClear();
        if(SCREEN_val > 1)
          SCREEN_val --;
        button = -1;
        text_presentation(SCREEN_val);
      }
      
    }
}
